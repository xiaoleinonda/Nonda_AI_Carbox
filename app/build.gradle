apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    signingConfigs {
        release {
            storePassword 'nondasmart'
            keyPassword 'nondasmart'
            keyAlias = 'nonda_ai_carbox'
            storeFile file('../nonda_ai_carbox')
        }
        debug {
            storePassword 'nondasmart'
            keyPassword 'nondasmart'
            keyAlias = 'nonda_ai_carbox'
            storeFile file('../nonda_ai_carbox')
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "us.nonda.ai"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 6
        versionName "1.0.5"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

 /*   flavorDimensions 'url'

    productFlavors {
        product {
            dimension 'url'
        }
        develop {
            dimension 'url'
        }
    }*/
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
//            zipAlignEnabled true
        }

        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

       /* productDebug{
            minifyEnabled false
            debuggable true

            signingConfig signingConfigs.debug
            matchingFallbacks = ['debug'] *//* 其他 lib 没有这个 buildType，使用 debug 模式*//*
        }

        developRelease{
            minifyEnabled false
            debuggable false
            signingConfig signingConfigs.release
            matchingFallbacks = ['release'] *//* 其他 lib 没有这个 buildType，使用 debug 模式*//*
        }*/

    }

    /*  android.applicationVariants.all { variant ->
          variant.outputs.all {
              outputFileName = "NondaFace-${variant.name}-${variant.versionName}.apk"
          }
      }*/

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir "libs"
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    api project(path: ':facelibrary')
    api project(path: ':commonlibrary')
    implementation project(path: ':cameralibrary')
    implementation project(path: ':systemlibrary')
    implementation project(path: ':mqttlibrary')
    implementation project(path: ':downloaderHelper')
    implementation project(path: ':videopushlibrary')

    //MQTT
    implementation 'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.1'


}

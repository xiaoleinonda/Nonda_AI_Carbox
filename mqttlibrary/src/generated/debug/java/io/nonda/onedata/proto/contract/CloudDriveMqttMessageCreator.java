// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CloudDriveMqttMessage.proto

package io.nonda.onedata.proto.contract;

public final class CloudDriveMqttMessageCreator {
  private CloudDriveMqttMessageCreator() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CloudDriveMqttMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttMessage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 cmd = 1;</code>
     */
    int getCmd();

    /**
     * <code>int64 time = 2;</code>
     */
    long getTime();

    /**
     * <code>.google.protobuf.Any data = 3;</code>
     */
    boolean hasData();
    /**
     * <code>.google.protobuf.Any data = 3;</code>
     */
    com.google.protobuf.Any getData();
    /**
     * <code>.google.protobuf.Any data = 3;</code>
     */
    com.google.protobuf.AnyOrBuilder getDataOrBuilder();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttMessage}
   */
  public  static final class CloudDriveMqttMessage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttMessage)
      CloudDriveMqttMessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttMessage.newBuilder() to construct.
    private CloudDriveMqttMessage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttMessage() {
      cmd_ = 0;
      time_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttMessage(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              cmd_ = input.readInt32();
              break;
            }
            case 16: {

              time_ = input.readInt64();
              break;
            }
            case 26: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.Builder.class);
    }

    public static final int CMD_FIELD_NUMBER = 1;
    private int cmd_;
    /**
     * <code>int32 cmd = 1;</code>
     */
    public int getCmd() {
      return cmd_;
    }

    public static final int TIME_FIELD_NUMBER = 2;
    private long time_;
    /**
     * <code>int64 time = 2;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int DATA_FIELD_NUMBER = 3;
    private com.google.protobuf.Any data_;
    /**
     * <code>.google.protobuf.Any data = 3;</code>
     */
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.google.protobuf.Any data = 3;</code>
     */
    public com.google.protobuf.Any getData() {
      return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
    }
    /**
     * <code>.google.protobuf.Any data = 3;</code>
     */
    public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
      return getData();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (cmd_ != 0) {
        output.writeInt32(1, cmd_);
      }
      if (time_ != 0L) {
        output.writeInt64(2, time_);
      }
      if (data_ != null) {
        output.writeMessage(3, getData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cmd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cmd_);
      }
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, time_);
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage) obj;

      boolean result = true;
      result = result && (getCmd()
          == other.getCmd());
      result = result && (getTime()
          == other.getTime());
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CMD_FIELD_NUMBER;
      hash = (53 * hash) + getCmd();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttMessage)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        cmd_ = 0;

        time_ = 0L;

        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage(this);
        result.cmd_ = cmd_;
        result.time_ = time_;
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage.getDefaultInstance()) return this;
        if (other.getCmd() != 0) {
          setCmd(other.getCmd());
        }
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int cmd_ ;
      /**
       * <code>int32 cmd = 1;</code>
       */
      public int getCmd() {
        return cmd_;
      }
      /**
       * <code>int32 cmd = 1;</code>
       */
      public Builder setCmd(int value) {
        
        cmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 cmd = 1;</code>
       */
      public Builder clearCmd() {
        
        cmd_ = 0;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 2;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 2;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 2;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Any data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> dataBuilder_;
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public com.google.protobuf.Any getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? com.google.protobuf.Any.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public Builder setData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public Builder setData(
          com.google.protobuf.Any.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public Builder mergeData(com.google.protobuf.Any value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              com.google.protobuf.Any.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public com.google.protobuf.Any.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      public com.google.protobuf.AnyOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.google.protobuf.Any data = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttMessage)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttMessage)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttMessage>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttMessage>() {
      public CloudDriveMqttMessage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttMessage(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttMessage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttMessage> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttMessage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttBoxStatusDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string fw = 1;</code>
     */
    java.lang.String getFw();
    /**
     * <code>string fw = 1;</code>
     */
    com.google.protobuf.ByteString
        getFwBytes();

    /**
     * <code>string app = 2;</code>
     */
    java.lang.String getApp();
    /**
     * <code>string app = 2;</code>
     */
    com.google.protobuf.ByteString
        getAppBytes();

    /**
     * <code>string sim = 3;</code>
     */
    java.lang.String getSim();
    /**
     * <code>string sim = 3;</code>
     */
    com.google.protobuf.ByteString
        getSimBytes();

    /**
     * <code>double lat = 4;</code>
     */
    double getLat();

    /**
     * <code>double lng = 5;</code>
     */
    double getLng();

    /**
     * <code>float acc = 6;</code>
     */
    float getAcc();

    /**
     * <code>float vol = 7;</code>
     */
    float getVol();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData}
   */
  public  static final class CloudDriveMqttBoxStatusData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData)
      CloudDriveMqttBoxStatusDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttBoxStatusData.newBuilder() to construct.
    private CloudDriveMqttBoxStatusData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttBoxStatusData() {
      fw_ = "";
      app_ = "";
      sim_ = "";
      lat_ = 0D;
      lng_ = 0D;
      acc_ = 0F;
      vol_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttBoxStatusData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              fw_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              app_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              sim_ = s;
              break;
            }
            case 33: {

              lat_ = input.readDouble();
              break;
            }
            case 41: {

              lng_ = input.readDouble();
              break;
            }
            case 53: {

              acc_ = input.readFloat();
              break;
            }
            case 61: {

              vol_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.Builder.class);
    }

    public static final int FW_FIELD_NUMBER = 1;
    private volatile java.lang.Object fw_;
    /**
     * <code>string fw = 1;</code>
     */
    public java.lang.String getFw() {
      java.lang.Object ref = fw_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fw_ = s;
        return s;
      }
    }
    /**
     * <code>string fw = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFwBytes() {
      java.lang.Object ref = fw_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APP_FIELD_NUMBER = 2;
    private volatile java.lang.Object app_;
    /**
     * <code>string app = 2;</code>
     */
    public java.lang.String getApp() {
      java.lang.Object ref = app_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        app_ = s;
        return s;
      }
    }
    /**
     * <code>string app = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAppBytes() {
      java.lang.Object ref = app_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        app_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIM_FIELD_NUMBER = 3;
    private volatile java.lang.Object sim_;
    /**
     * <code>string sim = 3;</code>
     */
    public java.lang.String getSim() {
      java.lang.Object ref = sim_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sim_ = s;
        return s;
      }
    }
    /**
     * <code>string sim = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSimBytes() {
      java.lang.Object ref = sim_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sim_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAT_FIELD_NUMBER = 4;
    private double lat_;
    /**
     * <code>double lat = 4;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int LNG_FIELD_NUMBER = 5;
    private double lng_;
    /**
     * <code>double lng = 5;</code>
     */
    public double getLng() {
      return lng_;
    }

    public static final int ACC_FIELD_NUMBER = 6;
    private float acc_;
    /**
     * <code>float acc = 6;</code>
     */
    public float getAcc() {
      return acc_;
    }

    public static final int VOL_FIELD_NUMBER = 7;
    private float vol_;
    /**
     * <code>float vol = 7;</code>
     */
    public float getVol() {
      return vol_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFwBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fw_);
      }
      if (!getAppBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, app_);
      }
      if (!getSimBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sim_);
      }
      if (lat_ != 0D) {
        output.writeDouble(4, lat_);
      }
      if (lng_ != 0D) {
        output.writeDouble(5, lng_);
      }
      if (acc_ != 0F) {
        output.writeFloat(6, acc_);
      }
      if (vol_ != 0F) {
        output.writeFloat(7, vol_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFwBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fw_);
      }
      if (!getAppBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, app_);
      }
      if (!getSimBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sim_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lat_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lng_);
      }
      if (acc_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, acc_);
      }
      if (vol_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, vol_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData) obj;

      boolean result = true;
      result = result && getFw()
          .equals(other.getFw());
      result = result && getApp()
          .equals(other.getApp());
      result = result && getSim()
          .equals(other.getSim());
      result = result && (
          java.lang.Double.doubleToLongBits(getLat())
          == java.lang.Double.doubleToLongBits(
              other.getLat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLng())
          == java.lang.Double.doubleToLongBits(
              other.getLng()));
      result = result && (
          java.lang.Float.floatToIntBits(getAcc())
          == java.lang.Float.floatToIntBits(
              other.getAcc()));
      result = result && (
          java.lang.Float.floatToIntBits(getVol())
          == java.lang.Float.floatToIntBits(
              other.getVol()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FW_FIELD_NUMBER;
      hash = (53 * hash) + getFw().hashCode();
      hash = (37 * hash) + APP_FIELD_NUMBER;
      hash = (53 * hash) + getApp().hashCode();
      hash = (37 * hash) + SIM_FIELD_NUMBER;
      hash = (53 * hash) + getSim().hashCode();
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + ACC_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAcc());
      hash = (37 * hash) + VOL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVol());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fw_ = "";

        app_ = "";

        sim_ = "";

        lat_ = 0D;

        lng_ = 0D;

        acc_ = 0F;

        vol_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData(this);
        result.fw_ = fw_;
        result.app_ = app_;
        result.sim_ = sim_;
        result.lat_ = lat_;
        result.lng_ = lng_;
        result.acc_ = acc_;
        result.vol_ = vol_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData.getDefaultInstance()) return this;
        if (!other.getFw().isEmpty()) {
          fw_ = other.fw_;
          onChanged();
        }
        if (!other.getApp().isEmpty()) {
          app_ = other.app_;
          onChanged();
        }
        if (!other.getSim().isEmpty()) {
          sim_ = other.sim_;
          onChanged();
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getAcc() != 0F) {
          setAcc(other.getAcc());
        }
        if (other.getVol() != 0F) {
          setVol(other.getVol());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object fw_ = "";
      /**
       * <code>string fw = 1;</code>
       */
      public java.lang.String getFw() {
        java.lang.Object ref = fw_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fw_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fw = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFwBytes() {
        java.lang.Object ref = fw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fw = 1;</code>
       */
      public Builder setFw(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fw = 1;</code>
       */
      public Builder clearFw() {
        
        fw_ = getDefaultInstance().getFw();
        onChanged();
        return this;
      }
      /**
       * <code>string fw = 1;</code>
       */
      public Builder setFwBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fw_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object app_ = "";
      /**
       * <code>string app = 2;</code>
       */
      public java.lang.String getApp() {
        java.lang.Object ref = app_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          app_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string app = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAppBytes() {
        java.lang.Object ref = app_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          app_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string app = 2;</code>
       */
      public Builder setApp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        app_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string app = 2;</code>
       */
      public Builder clearApp() {
        
        app_ = getDefaultInstance().getApp();
        onChanged();
        return this;
      }
      /**
       * <code>string app = 2;</code>
       */
      public Builder setAppBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        app_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sim_ = "";
      /**
       * <code>string sim = 3;</code>
       */
      public java.lang.String getSim() {
        java.lang.Object ref = sim_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sim_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sim = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSimBytes() {
        java.lang.Object ref = sim_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sim_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sim = 3;</code>
       */
      public Builder setSim(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sim_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sim = 3;</code>
       */
      public Builder clearSim() {
        
        sim_ = getDefaultInstance().getSim();
        onChanged();
        return this;
      }
      /**
       * <code>string sim = 3;</code>
       */
      public Builder setSimBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sim_ = value;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <code>double lat = 4;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <code>double lat = 4;</code>
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lat = 4;</code>
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private double lng_ ;
      /**
       * <code>double lng = 5;</code>
       */
      public double getLng() {
        return lng_;
      }
      /**
       * <code>double lng = 5;</code>
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lng = 5;</code>
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private float acc_ ;
      /**
       * <code>float acc = 6;</code>
       */
      public float getAcc() {
        return acc_;
      }
      /**
       * <code>float acc = 6;</code>
       */
      public Builder setAcc(float value) {
        
        acc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float acc = 6;</code>
       */
      public Builder clearAcc() {
        
        acc_ = 0F;
        onChanged();
        return this;
      }

      private float vol_ ;
      /**
       * <code>float vol = 7;</code>
       */
      public float getVol() {
        return vol_;
      }
      /**
       * <code>float vol = 7;</code>
       */
      public Builder setVol(float value) {
        
        vol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float vol = 7;</code>
       */
      public Builder clearVol() {
        
        vol_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttBoxStatusData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttBoxStatusData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttBoxStatusData>() {
      public CloudDriveMqttBoxStatusData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttBoxStatusData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttBoxStatusData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttBoxStatusData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttBoxStatusData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttEventDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttEventData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string fw = 1;</code>
     */
    java.lang.String getFw();
    /**
     * <code>string fw = 1;</code>
     */
    com.google.protobuf.ByteString
        getFwBytes();

    /**
     * <code>string app = 2;</code>
     */
    java.lang.String getApp();
    /**
     * <code>string app = 2;</code>
     */
    com.google.protobuf.ByteString
        getAppBytes();

    /**
     * <code>string sim = 3;</code>
     */
    java.lang.String getSim();
    /**
     * <code>string sim = 3;</code>
     */
    com.google.protobuf.ByteString
        getSimBytes();

    /**
     * <code>double lat = 4;</code>
     */
    double getLat();

    /**
     * <code>double lng = 5;</code>
     */
    double getLng();

    /**
     * <code>float acc = 6;</code>
     */
    float getAcc();

    /**
     * <code>float vol = 7;</code>
     */
    float getVol();

    /**
     * <code>int32 type = 8;</code>
     */
    int getType();

    /**
     * <code>string content = 9;</code>
     */
    java.lang.String getContent();
    /**
     * <code>string content = 9;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttEventData}
   */
  public  static final class CloudDriveMqttEventData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttEventData)
      CloudDriveMqttEventDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttEventData.newBuilder() to construct.
    private CloudDriveMqttEventData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttEventData() {
      fw_ = "";
      app_ = "";
      sim_ = "";
      lat_ = 0D;
      lng_ = 0D;
      acc_ = 0F;
      vol_ = 0F;
      type_ = 0;
      content_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttEventData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              fw_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              app_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              sim_ = s;
              break;
            }
            case 33: {

              lat_ = input.readDouble();
              break;
            }
            case 41: {

              lng_ = input.readDouble();
              break;
            }
            case 53: {

              acc_ = input.readFloat();
              break;
            }
            case 61: {

              vol_ = input.readFloat();
              break;
            }
            case 64: {

              type_ = input.readInt32();
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.Builder.class);
    }

    public static final int FW_FIELD_NUMBER = 1;
    private volatile java.lang.Object fw_;
    /**
     * <code>string fw = 1;</code>
     */
    public java.lang.String getFw() {
      java.lang.Object ref = fw_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fw_ = s;
        return s;
      }
    }
    /**
     * <code>string fw = 1;</code>
     */
    public com.google.protobuf.ByteString
        getFwBytes() {
      java.lang.Object ref = fw_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fw_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APP_FIELD_NUMBER = 2;
    private volatile java.lang.Object app_;
    /**
     * <code>string app = 2;</code>
     */
    public java.lang.String getApp() {
      java.lang.Object ref = app_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        app_ = s;
        return s;
      }
    }
    /**
     * <code>string app = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAppBytes() {
      java.lang.Object ref = app_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        app_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SIM_FIELD_NUMBER = 3;
    private volatile java.lang.Object sim_;
    /**
     * <code>string sim = 3;</code>
     */
    public java.lang.String getSim() {
      java.lang.Object ref = sim_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sim_ = s;
        return s;
      }
    }
    /**
     * <code>string sim = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSimBytes() {
      java.lang.Object ref = sim_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sim_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAT_FIELD_NUMBER = 4;
    private double lat_;
    /**
     * <code>double lat = 4;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int LNG_FIELD_NUMBER = 5;
    private double lng_;
    /**
     * <code>double lng = 5;</code>
     */
    public double getLng() {
      return lng_;
    }

    public static final int ACC_FIELD_NUMBER = 6;
    private float acc_;
    /**
     * <code>float acc = 6;</code>
     */
    public float getAcc() {
      return acc_;
    }

    public static final int VOL_FIELD_NUMBER = 7;
    private float vol_;
    /**
     * <code>float vol = 7;</code>
     */
    public float getVol() {
      return vol_;
    }

    public static final int TYPE_FIELD_NUMBER = 8;
    private int type_;
    /**
     * <code>int32 type = 8;</code>
     */
    public int getType() {
      return type_;
    }

    public static final int CONTENT_FIELD_NUMBER = 9;
    private volatile java.lang.Object content_;
    /**
     * <code>string content = 9;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <code>string content = 9;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getFwBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, fw_);
      }
      if (!getAppBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, app_);
      }
      if (!getSimBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, sim_);
      }
      if (lat_ != 0D) {
        output.writeDouble(4, lat_);
      }
      if (lng_ != 0D) {
        output.writeDouble(5, lng_);
      }
      if (acc_ != 0F) {
        output.writeFloat(6, acc_);
      }
      if (vol_ != 0F) {
        output.writeFloat(7, vol_);
      }
      if (type_ != 0) {
        output.writeInt32(8, type_);
      }
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 9, content_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getFwBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, fw_);
      }
      if (!getAppBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, app_);
      }
      if (!getSimBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, sim_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, lat_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, lng_);
      }
      if (acc_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, acc_);
      }
      if (vol_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, vol_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, type_);
      }
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, content_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData) obj;

      boolean result = true;
      result = result && getFw()
          .equals(other.getFw());
      result = result && getApp()
          .equals(other.getApp());
      result = result && getSim()
          .equals(other.getSim());
      result = result && (
          java.lang.Double.doubleToLongBits(getLat())
          == java.lang.Double.doubleToLongBits(
              other.getLat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLng())
          == java.lang.Double.doubleToLongBits(
              other.getLng()));
      result = result && (
          java.lang.Float.floatToIntBits(getAcc())
          == java.lang.Float.floatToIntBits(
              other.getAcc()));
      result = result && (
          java.lang.Float.floatToIntBits(getVol())
          == java.lang.Float.floatToIntBits(
              other.getVol()));
      result = result && (getType()
          == other.getType());
      result = result && getContent()
          .equals(other.getContent());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FW_FIELD_NUMBER;
      hash = (53 * hash) + getFw().hashCode();
      hash = (37 * hash) + APP_FIELD_NUMBER;
      hash = (53 * hash) + getApp().hashCode();
      hash = (37 * hash) + SIM_FIELD_NUMBER;
      hash = (53 * hash) + getSim().hashCode();
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + ACC_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAcc());
      hash = (37 * hash) + VOL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getVol());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttEventData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttEventData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        fw_ = "";

        app_ = "";

        sim_ = "";

        lat_ = 0D;

        lng_ = 0D;

        acc_ = 0F;

        vol_ = 0F;

        type_ = 0;

        content_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData(this);
        result.fw_ = fw_;
        result.app_ = app_;
        result.sim_ = sim_;
        result.lat_ = lat_;
        result.lng_ = lng_;
        result.acc_ = acc_;
        result.vol_ = vol_;
        result.type_ = type_;
        result.content_ = content_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData.getDefaultInstance()) return this;
        if (!other.getFw().isEmpty()) {
          fw_ = other.fw_;
          onChanged();
        }
        if (!other.getApp().isEmpty()) {
          app_ = other.app_;
          onChanged();
        }
        if (!other.getSim().isEmpty()) {
          sim_ = other.sim_;
          onChanged();
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getAcc() != 0F) {
          setAcc(other.getAcc());
        }
        if (other.getVol() != 0F) {
          setVol(other.getVol());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object fw_ = "";
      /**
       * <code>string fw = 1;</code>
       */
      public java.lang.String getFw() {
        java.lang.Object ref = fw_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          fw_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string fw = 1;</code>
       */
      public com.google.protobuf.ByteString
          getFwBytes() {
        java.lang.Object ref = fw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string fw = 1;</code>
       */
      public Builder setFw(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        fw_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string fw = 1;</code>
       */
      public Builder clearFw() {
        
        fw_ = getDefaultInstance().getFw();
        onChanged();
        return this;
      }
      /**
       * <code>string fw = 1;</code>
       */
      public Builder setFwBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        fw_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object app_ = "";
      /**
       * <code>string app = 2;</code>
       */
      public java.lang.String getApp() {
        java.lang.Object ref = app_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          app_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string app = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAppBytes() {
        java.lang.Object ref = app_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          app_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string app = 2;</code>
       */
      public Builder setApp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        app_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string app = 2;</code>
       */
      public Builder clearApp() {
        
        app_ = getDefaultInstance().getApp();
        onChanged();
        return this;
      }
      /**
       * <code>string app = 2;</code>
       */
      public Builder setAppBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        app_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sim_ = "";
      /**
       * <code>string sim = 3;</code>
       */
      public java.lang.String getSim() {
        java.lang.Object ref = sim_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sim_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string sim = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSimBytes() {
        java.lang.Object ref = sim_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sim_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string sim = 3;</code>
       */
      public Builder setSim(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sim_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string sim = 3;</code>
       */
      public Builder clearSim() {
        
        sim_ = getDefaultInstance().getSim();
        onChanged();
        return this;
      }
      /**
       * <code>string sim = 3;</code>
       */
      public Builder setSimBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sim_ = value;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <code>double lat = 4;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <code>double lat = 4;</code>
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lat = 4;</code>
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private double lng_ ;
      /**
       * <code>double lng = 5;</code>
       */
      public double getLng() {
        return lng_;
      }
      /**
       * <code>double lng = 5;</code>
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lng = 5;</code>
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private float acc_ ;
      /**
       * <code>float acc = 6;</code>
       */
      public float getAcc() {
        return acc_;
      }
      /**
       * <code>float acc = 6;</code>
       */
      public Builder setAcc(float value) {
        
        acc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float acc = 6;</code>
       */
      public Builder clearAcc() {
        
        acc_ = 0F;
        onChanged();
        return this;
      }

      private float vol_ ;
      /**
       * <code>float vol = 7;</code>
       */
      public float getVol() {
        return vol_;
      }
      /**
       * <code>float vol = 7;</code>
       */
      public Builder setVol(float value) {
        
        vol_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float vol = 7;</code>
       */
      public Builder clearVol() {
        
        vol_ = 0F;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>int32 type = 8;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>int32 type = 8;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 type = 8;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object content_ = "";
      /**
       * <code>string content = 9;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string content = 9;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string content = 9;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string content = 9;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>string content = 9;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttEventData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttEventData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttEventData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttEventData>() {
      public CloudDriveMqttEventData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttEventData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttEventData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttEventData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEventData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttGpsDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttGpsData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem> 
        getItemsList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem getItems(int index);
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGpsData}
   */
  public  static final class CloudDriveMqttGpsData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGpsData)
      CloudDriveMqttGpsDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttGpsData.newBuilder() to construct.
    private CloudDriveMqttGpsData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttGpsData() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttGpsData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem> items_;
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData) obj;

      boolean result = true;
      result = result && getItemsList()
          .equals(other.getItemsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGpsData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGpsData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder addItems(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder addItems(
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGpsData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGpsData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttGpsData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttGpsData>() {
      public CloudDriveMqttGpsData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttGpsData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttGpsData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttGpsData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttGpsDataItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>double lat = 2;</code>
     */
    double getLat();

    /**
     * <code>double lng = 3;</code>
     */
    double getLng();

    /**
     * <code>float spd = 4;</code>
     */
    float getSpd();

    /**
     * <code>float acc = 5;</code>
     */
    float getAcc();

    /**
     * <code>float brg = 6;</code>
     */
    float getBrg();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem}
   */
  public  static final class CloudDriveMqttGpsDataItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem)
      CloudDriveMqttGpsDataItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttGpsDataItem.newBuilder() to construct.
    private CloudDriveMqttGpsDataItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttGpsDataItem() {
      time_ = 0L;
      lat_ = 0D;
      lng_ = 0D;
      spd_ = 0F;
      acc_ = 0F;
      brg_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttGpsDataItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 17: {

              lat_ = input.readDouble();
              break;
            }
            case 25: {

              lng_ = input.readDouble();
              break;
            }
            case 37: {

              spd_ = input.readFloat();
              break;
            }
            case 45: {

              acc_ = input.readFloat();
              break;
            }
            case 53: {

              brg_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int LAT_FIELD_NUMBER = 2;
    private double lat_;
    /**
     * <code>double lat = 2;</code>
     */
    public double getLat() {
      return lat_;
    }

    public static final int LNG_FIELD_NUMBER = 3;
    private double lng_;
    /**
     * <code>double lng = 3;</code>
     */
    public double getLng() {
      return lng_;
    }

    public static final int SPD_FIELD_NUMBER = 4;
    private float spd_;
    /**
     * <code>float spd = 4;</code>
     */
    public float getSpd() {
      return spd_;
    }

    public static final int ACC_FIELD_NUMBER = 5;
    private float acc_;
    /**
     * <code>float acc = 5;</code>
     */
    public float getAcc() {
      return acc_;
    }

    public static final int BRG_FIELD_NUMBER = 6;
    private float brg_;
    /**
     * <code>float brg = 6;</code>
     */
    public float getBrg() {
      return brg_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (lat_ != 0D) {
        output.writeDouble(2, lat_);
      }
      if (lng_ != 0D) {
        output.writeDouble(3, lng_);
      }
      if (spd_ != 0F) {
        output.writeFloat(4, spd_);
      }
      if (acc_ != 0F) {
        output.writeFloat(5, acc_);
      }
      if (brg_ != 0F) {
        output.writeFloat(6, brg_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (lat_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, lat_);
      }
      if (lng_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, lng_);
      }
      if (spd_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, spd_);
      }
      if (acc_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, acc_);
      }
      if (brg_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, brg_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && (
          java.lang.Double.doubleToLongBits(getLat())
          == java.lang.Double.doubleToLongBits(
              other.getLat()));
      result = result && (
          java.lang.Double.doubleToLongBits(getLng())
          == java.lang.Double.doubleToLongBits(
              other.getLng()));
      result = result && (
          java.lang.Float.floatToIntBits(getSpd())
          == java.lang.Float.floatToIntBits(
              other.getSpd()));
      result = result && (
          java.lang.Float.floatToIntBits(getAcc())
          == java.lang.Float.floatToIntBits(
              other.getAcc()));
      result = result && (
          java.lang.Float.floatToIntBits(getBrg())
          == java.lang.Float.floatToIntBits(
              other.getBrg()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + LAT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLat()));
      hash = (37 * hash) + LNG_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLng()));
      hash = (37 * hash) + SPD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSpd());
      hash = (37 * hash) + ACC_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getAcc());
      hash = (37 * hash) + BRG_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBrg());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        lat_ = 0D;

        lng_ = 0D;

        spd_ = 0F;

        acc_ = 0F;

        brg_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem(this);
        result.time_ = time_;
        result.lat_ = lat_;
        result.lng_ = lng_;
        result.spd_ = spd_;
        result.acc_ = acc_;
        result.brg_ = brg_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getLat() != 0D) {
          setLat(other.getLat());
        }
        if (other.getLng() != 0D) {
          setLng(other.getLng());
        }
        if (other.getSpd() != 0F) {
          setSpd(other.getSpd());
        }
        if (other.getAcc() != 0F) {
          setAcc(other.getAcc());
        }
        if (other.getBrg() != 0F) {
          setBrg(other.getBrg());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private double lat_ ;
      /**
       * <code>double lat = 2;</code>
       */
      public double getLat() {
        return lat_;
      }
      /**
       * <code>double lat = 2;</code>
       */
      public Builder setLat(double value) {
        
        lat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lat = 2;</code>
       */
      public Builder clearLat() {
        
        lat_ = 0D;
        onChanged();
        return this;
      }

      private double lng_ ;
      /**
       * <code>double lng = 3;</code>
       */
      public double getLng() {
        return lng_;
      }
      /**
       * <code>double lng = 3;</code>
       */
      public Builder setLng(double value) {
        
        lng_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>double lng = 3;</code>
       */
      public Builder clearLng() {
        
        lng_ = 0D;
        onChanged();
        return this;
      }

      private float spd_ ;
      /**
       * <code>float spd = 4;</code>
       */
      public float getSpd() {
        return spd_;
      }
      /**
       * <code>float spd = 4;</code>
       */
      public Builder setSpd(float value) {
        
        spd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float spd = 4;</code>
       */
      public Builder clearSpd() {
        
        spd_ = 0F;
        onChanged();
        return this;
      }

      private float acc_ ;
      /**
       * <code>float acc = 5;</code>
       */
      public float getAcc() {
        return acc_;
      }
      /**
       * <code>float acc = 5;</code>
       */
      public Builder setAcc(float value) {
        
        acc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float acc = 5;</code>
       */
      public Builder clearAcc() {
        
        acc_ = 0F;
        onChanged();
        return this;
      }

      private float brg_ ;
      /**
       * <code>float brg = 6;</code>
       */
      public float getBrg() {
        return brg_;
      }
      /**
       * <code>float brg = 6;</code>
       */
      public Builder setBrg(float value) {
        
        brg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float brg = 6;</code>
       */
      public Builder clearBrg() {
        
        brg_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGpsDataItem)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttGpsDataItem>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttGpsDataItem>() {
      public CloudDriveMqttGpsDataItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttGpsDataItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttGpsDataItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttGpsDataItem> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGpsDataItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttGSensorDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem> 
        getItemsList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem getItems(int index);
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData}
   */
  public  static final class CloudDriveMqttGSensorData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData)
      CloudDriveMqttGSensorDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttGSensorData.newBuilder() to construct.
    private CloudDriveMqttGSensorData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttGSensorData() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttGSensorData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem> items_;
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData) obj;

      boolean result = true;
      result = result && getItemsList()
          .equals(other.getItemsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder addItems(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder addItems(
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttGSensorData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttGSensorData>() {
      public CloudDriveMqttGSensorData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttGSensorData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttGSensorData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttGSensorData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttGSensorDataItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>float x = 2;</code>
     */
    float getX();

    /**
     * <code>float y = 3;</code>
     */
    float getY();

    /**
     * <code>float z = 4;</code>
     */
    float getZ();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem}
   */
  public  static final class CloudDriveMqttGSensorDataItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem)
      CloudDriveMqttGSensorDataItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttGSensorDataItem.newBuilder() to construct.
    private CloudDriveMqttGSensorDataItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttGSensorDataItem() {
      time_ = 0L;
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttGSensorDataItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 21: {

              x_ = input.readFloat();
              break;
            }
            case 29: {

              y_ = input.readFloat();
              break;
            }
            case 37: {

              z_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <code>float x = 2;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <code>float y = 3;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 4;
    private float z_;
    /**
     * <code>float z = 4;</code>
     */
    public float getZ() {
      return z_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (x_ != 0F) {
        output.writeFloat(2, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(3, y_);
      }
      if (z_ != 0F) {
        output.writeFloat(4, z_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, y_);
      }
      if (z_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, z_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && (
          java.lang.Float.floatToIntBits(getX())
          == java.lang.Float.floatToIntBits(
              other.getX()));
      result = result && (
          java.lang.Float.floatToIntBits(getY())
          == java.lang.Float.floatToIntBits(
              other.getY()));
      result = result && (
          java.lang.Float.floatToIntBits(getZ())
          == java.lang.Float.floatToIntBits(
              other.getZ()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + Z_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getZ());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        x_ = 0F;

        y_ = 0F;

        z_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem(this);
        result.time_ = time_;
        result.x_ = x_;
        result.y_ = y_;
        result.z_ = z_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getZ() != 0F) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 2;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 2;</code>
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 2;</code>
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 3;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 3;</code>
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 3;</code>
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <code>float z = 4;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <code>float z = 4;</code>
       */
      public Builder setZ(float value) {
        
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float z = 4;</code>
       */
      public Builder clearZ() {
        
        z_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGSensorDataItem)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttGSensorDataItem>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttGSensorDataItem>() {
      public CloudDriveMqttGSensorDataItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttGSensorDataItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttGSensorDataItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttGSensorDataItem> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGSensorDataItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttGyroDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttGyroData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem> 
        getItemsList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem getItems(int index);
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGyroData}
   */
  public  static final class CloudDriveMqttGyroData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGyroData)
      CloudDriveMqttGyroDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttGyroData.newBuilder() to construct.
    private CloudDriveMqttGyroData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttGyroData() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttGyroData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem> items_;
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData) obj;

      boolean result = true;
      result = result && getItemsList()
          .equals(other.getItemsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGyroData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGyroData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder addItems(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder addItems(
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGyroData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGyroData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttGyroData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttGyroData>() {
      public CloudDriveMqttGyroData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttGyroData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttGyroData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttGyroData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttGyroDataItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>float x = 2;</code>
     */
    float getX();

    /**
     * <code>float y = 3;</code>
     */
    float getY();

    /**
     * <code>float z = 4;</code>
     */
    float getZ();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem}
   */
  public  static final class CloudDriveMqttGyroDataItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem)
      CloudDriveMqttGyroDataItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttGyroDataItem.newBuilder() to construct.
    private CloudDriveMqttGyroDataItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttGyroDataItem() {
      time_ = 0L;
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttGyroDataItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 21: {

              x_ = input.readFloat();
              break;
            }
            case 29: {

              y_ = input.readFloat();
              break;
            }
            case 37: {

              z_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private float x_;
    /**
     * <code>float x = 2;</code>
     */
    public float getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private float y_;
    /**
     * <code>float y = 3;</code>
     */
    public float getY() {
      return y_;
    }

    public static final int Z_FIELD_NUMBER = 4;
    private float z_;
    /**
     * <code>float z = 4;</code>
     */
    public float getZ() {
      return z_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (x_ != 0F) {
        output.writeFloat(2, x_);
      }
      if (y_ != 0F) {
        output.writeFloat(3, y_);
      }
      if (z_ != 0F) {
        output.writeFloat(4, z_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (x_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, x_);
      }
      if (y_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, y_);
      }
      if (z_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, z_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && (
          java.lang.Float.floatToIntBits(getX())
          == java.lang.Float.floatToIntBits(
              other.getX()));
      result = result && (
          java.lang.Float.floatToIntBits(getY())
          == java.lang.Float.floatToIntBits(
              other.getY()));
      result = result && (
          java.lang.Float.floatToIntBits(getZ())
          == java.lang.Float.floatToIntBits(
              other.getZ()));
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + X_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX());
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY());
      hash = (37 * hash) + Z_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getZ());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        x_ = 0F;

        y_ = 0F;

        z_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem(this);
        result.time_ = time_;
        result.x_ = x_;
        result.y_ = y_;
        result.z_ = z_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getX() != 0F) {
          setX(other.getX());
        }
        if (other.getY() != 0F) {
          setY(other.getY());
        }
        if (other.getZ() != 0F) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private float x_ ;
      /**
       * <code>float x = 2;</code>
       */
      public float getX() {
        return x_;
      }
      /**
       * <code>float x = 2;</code>
       */
      public Builder setX(float value) {
        
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float x = 2;</code>
       */
      public Builder clearX() {
        
        x_ = 0F;
        onChanged();
        return this;
      }

      private float y_ ;
      /**
       * <code>float y = 3;</code>
       */
      public float getY() {
        return y_;
      }
      /**
       * <code>float y = 3;</code>
       */
      public Builder setY(float value) {
        
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y = 3;</code>
       */
      public Builder clearY() {
        
        y_ = 0F;
        onChanged();
        return this;
      }

      private float z_ ;
      /**
       * <code>float z = 4;</code>
       */
      public float getZ() {
        return z_;
      }
      /**
       * <code>float z = 4;</code>
       */
      public Builder setZ(float value) {
        
        z_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float z = 4;</code>
       */
      public Builder clearZ() {
        
        z_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttGyroDataItem)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttGyroDataItem>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttGyroDataItem>() {
      public CloudDriveMqttGyroDataItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttGyroDataItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttGyroDataItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttGyroDataItem> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttGyroDataItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttFreqDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttFreqData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 collectFreq = 1;</code>
     */
    int getCollectFreq();

    /**
     * <code>int32 reportFreq = 2;</code>
     */
    int getReportFreq();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttFreqData}
   */
  public  static final class CloudDriveMqttFreqData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttFreqData)
      CloudDriveMqttFreqDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttFreqData.newBuilder() to construct.
    private CloudDriveMqttFreqData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttFreqData() {
      collectFreq_ = 0;
      reportFreq_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttFreqData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              collectFreq_ = input.readInt32();
              break;
            }
            case 16: {

              reportFreq_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.Builder.class);
    }

    public static final int COLLECTFREQ_FIELD_NUMBER = 1;
    private int collectFreq_;
    /**
     * <code>int32 collectFreq = 1;</code>
     */
    public int getCollectFreq() {
      return collectFreq_;
    }

    public static final int REPORTFREQ_FIELD_NUMBER = 2;
    private int reportFreq_;
    /**
     * <code>int32 reportFreq = 2;</code>
     */
    public int getReportFreq() {
      return reportFreq_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (collectFreq_ != 0) {
        output.writeInt32(1, collectFreq_);
      }
      if (reportFreq_ != 0) {
        output.writeInt32(2, reportFreq_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (collectFreq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, collectFreq_);
      }
      if (reportFreq_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, reportFreq_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData) obj;

      boolean result = true;
      result = result && (getCollectFreq()
          == other.getCollectFreq());
      result = result && (getReportFreq()
          == other.getReportFreq());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COLLECTFREQ_FIELD_NUMBER;
      hash = (53 * hash) + getCollectFreq();
      hash = (37 * hash) + REPORTFREQ_FIELD_NUMBER;
      hash = (53 * hash) + getReportFreq();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttFreqData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttFreqData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        collectFreq_ = 0;

        reportFreq_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData(this);
        result.collectFreq_ = collectFreq_;
        result.reportFreq_ = reportFreq_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData.getDefaultInstance()) return this;
        if (other.getCollectFreq() != 0) {
          setCollectFreq(other.getCollectFreq());
        }
        if (other.getReportFreq() != 0) {
          setReportFreq(other.getReportFreq());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int collectFreq_ ;
      /**
       * <code>int32 collectFreq = 1;</code>
       */
      public int getCollectFreq() {
        return collectFreq_;
      }
      /**
       * <code>int32 collectFreq = 1;</code>
       */
      public Builder setCollectFreq(int value) {
        
        collectFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 collectFreq = 1;</code>
       */
      public Builder clearCollectFreq() {
        
        collectFreq_ = 0;
        onChanged();
        return this;
      }

      private int reportFreq_ ;
      /**
       * <code>int32 reportFreq = 2;</code>
       */
      public int getReportFreq() {
        return reportFreq_;
      }
      /**
       * <code>int32 reportFreq = 2;</code>
       */
      public Builder setReportFreq(int value) {
        
        reportFreq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 reportFreq = 2;</code>
       */
      public Builder clearReportFreq() {
        
        reportFreq_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttFreqData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttFreqData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttFreqData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttFreqData>() {
      public CloudDriveMqttFreqData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttFreqData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttFreqData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttFreqData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFreqData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttFaceDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttFaceData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem> 
        getItemsList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem getItems(int index);
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttFaceData}
   */
  public  static final class CloudDriveMqttFaceData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttFaceData)
      CloudDriveMqttFaceDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttFaceData.newBuilder() to construct.
    private CloudDriveMqttFaceData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttFaceData() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttFaceData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem> items_;
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData) obj;

      boolean result = true;
      result = result && getItemsList()
          .equals(other.getItemsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttFaceData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttFaceData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder addItems(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder addItems(
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttFaceData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttFaceData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttFaceData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttFaceData>() {
      public CloudDriveMqttFaceData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttFaceData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttFaceData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttFaceData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttFaceDataItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>int32 face = 2;</code>
     */
    int getFace();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem}
   */
  public  static final class CloudDriveMqttFaceDataItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem)
      CloudDriveMqttFaceDataItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttFaceDataItem.newBuilder() to construct.
    private CloudDriveMqttFaceDataItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttFaceDataItem() {
      time_ = 0L;
      face_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttFaceDataItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 16: {

              face_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int FACE_FIELD_NUMBER = 2;
    private int face_;
    /**
     * <code>int32 face = 2;</code>
     */
    public int getFace() {
      return face_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (face_ != 0) {
        output.writeInt32(2, face_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (face_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, face_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && (getFace()
          == other.getFace());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + FACE_FIELD_NUMBER;
      hash = (53 * hash) + getFace();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        face_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem(this);
        result.time_ = time_;
        result.face_ = face_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (other.getFace() != 0) {
          setFace(other.getFace());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private int face_ ;
      /**
       * <code>int32 face = 2;</code>
       */
      public int getFace() {
        return face_;
      }
      /**
       * <code>int32 face = 2;</code>
       */
      public Builder setFace(int value) {
        
        face_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 face = 2;</code>
       */
      public Builder clearFace() {
        
        face_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttFaceDataItem)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttFaceDataItem>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttFaceDataItem>() {
      public CloudDriveMqttFaceDataItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttFaceDataItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttFaceDataItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttFaceDataItem> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttFaceDataItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttEmotionDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem> 
        getItemsList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem getItems(int index);
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    int getItemsCount();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder> 
        getItemsOrBuilderList();
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder getItemsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData}
   */
  public  static final class CloudDriveMqttEmotionData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData)
      CloudDriveMqttEmotionDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttEmotionData.newBuilder() to construct.
    private CloudDriveMqttEmotionData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttEmotionData() {
      items_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttEmotionData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem>();
                mutable_bitField0_ |= 0x00000001;
              }
              items_.add(
                  input.readMessage(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = java.util.Collections.unmodifiableList(items_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.Builder.class);
    }

    public static final int ITEMS_FIELD_NUMBER = 1;
    private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem> items_;
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem> getItemsList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder> 
        getItemsOrBuilderList() {
      return items_;
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    public int getItemsCount() {
      return items_.size();
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem getItems(int index) {
      return items_.get(index);
    }
    /**
     * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
     */
    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder getItemsOrBuilder(
        int index) {
      return items_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < items_.size(); i++) {
        output.writeMessage(1, items_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < items_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, items_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData) obj;

      boolean result = true;
      result = result && getItemsList()
          .equals(other.getItemsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getItemsCount() > 0) {
        hash = (37 * hash) + ITEMS_FIELD_NUMBER;
        hash = (53 * hash) + getItemsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getItemsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData(this);
        int from_bitField0_ = bitField0_;
        if (itemsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            items_ = java.util.Collections.unmodifiableList(items_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.items_ = items_;
        } else {
          result.items_ = itemsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData.getDefaultInstance()) return this;
        if (itemsBuilder_ == null) {
          if (!other.items_.isEmpty()) {
            if (items_.isEmpty()) {
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureItemsIsMutable();
              items_.addAll(other.items_);
            }
            onChanged();
          }
        } else {
          if (!other.items_.isEmpty()) {
            if (itemsBuilder_.isEmpty()) {
              itemsBuilder_.dispose();
              itemsBuilder_ = null;
              items_ = other.items_;
              bitField0_ = (bitField0_ & ~0x00000001);
              itemsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getItemsFieldBuilder() : null;
            } else {
              itemsBuilder_.addAllMessages(other.items_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem> items_ =
        java.util.Collections.emptyList();
      private void ensureItemsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          items_ = new java.util.ArrayList<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem>(items_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder> itemsBuilder_;

      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem> getItemsList() {
        if (itemsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(items_);
        } else {
          return itemsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public int getItemsCount() {
        if (itemsBuilder_ == null) {
          return items_.size();
        } else {
          return itemsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem getItems(int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);
        } else {
          return itemsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.set(index, value);
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder setItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.set(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder addItems(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem value) {
        if (itemsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureItemsIsMutable();
          items_.add(index, value);
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder addItems(
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder addItems(
          int index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder builderForValue) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.add(index, builderForValue.build());
          onChanged();
        } else {
          itemsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder addAllItems(
          java.lang.Iterable<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem> values) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, items_);
          onChanged();
        } else {
          itemsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder clearItems() {
        if (itemsBuilder_ == null) {
          items_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          itemsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public Builder removeItems(int index) {
        if (itemsBuilder_ == null) {
          ensureItemsIsMutable();
          items_.remove(index);
          onChanged();
        } else {
          itemsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder getItemsBuilder(
          int index) {
        return getItemsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder getItemsOrBuilder(
          int index) {
        if (itemsBuilder_ == null) {
          return items_.get(index);  } else {
          return itemsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public java.util.List<? extends io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder> 
           getItemsOrBuilderList() {
        if (itemsBuilder_ != null) {
          return itemsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(items_);
        }
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder addItemsBuilder() {
        return getItemsFieldBuilder().addBuilder(
            io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder addItemsBuilder(
          int index) {
        return getItemsFieldBuilder().addBuilder(
            index, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.getDefaultInstance());
      }
      /**
       * <code>repeated .io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem items = 1;</code>
       */
      public java.util.List<io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder> 
           getItemsBuilderList() {
        return getItemsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder> 
          getItemsFieldBuilder() {
        if (itemsBuilder_ == null) {
          itemsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder>(
                  items_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          items_ = null;
        }
        return itemsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttEmotionData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttEmotionData>() {
      public CloudDriveMqttEmotionData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttEmotionData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttEmotionData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttEmotionData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttEmotionDataItemOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 time = 1;</code>
     */
    long getTime();

    /**
     * <code>string emotion = 2;</code>
     */
    java.lang.String getEmotion();
    /**
     * <code>string emotion = 2;</code>
     */
    com.google.protobuf.ByteString
        getEmotionBytes();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem}
   */
  public  static final class CloudDriveMqttEmotionDataItem extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem)
      CloudDriveMqttEmotionDataItemOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttEmotionDataItem.newBuilder() to construct.
    private CloudDriveMqttEmotionDataItem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttEmotionDataItem() {
      time_ = 0L;
      emotion_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttEmotionDataItem(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              time_ = input.readInt64();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              emotion_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private long time_;
    /**
     * <code>int64 time = 1;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int EMOTION_FIELD_NUMBER = 2;
    private volatile java.lang.Object emotion_;
    /**
     * <code>string emotion = 2;</code>
     */
    public java.lang.String getEmotion() {
      java.lang.Object ref = emotion_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        emotion_ = s;
        return s;
      }
    }
    /**
     * <code>string emotion = 2;</code>
     */
    public com.google.protobuf.ByteString
        getEmotionBytes() {
      java.lang.Object ref = emotion_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        emotion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0L) {
        output.writeInt64(1, time_);
      }
      if (!getEmotionBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, emotion_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, time_);
      }
      if (!getEmotionBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, emotion_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem) obj;

      boolean result = true;
      result = result && (getTime()
          == other.getTime());
      result = result && getEmotion()
          .equals(other.getEmotion());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getTime());
      hash = (37 * hash) + EMOTION_FIELD_NUMBER;
      hash = (53 * hash) + getEmotion().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItemOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        time_ = 0L;

        emotion_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem(this);
        result.time_ = time_;
        result.emotion_ = emotion_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem.getDefaultInstance()) return this;
        if (other.getTime() != 0L) {
          setTime(other.getTime());
        }
        if (!other.getEmotion().isEmpty()) {
          emotion_ = other.emotion_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long time_ ;
      /**
       * <code>int64 time = 1;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder setTime(long value) {
        
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 time = 1;</code>
       */
      public Builder clearTime() {
        
        time_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object emotion_ = "";
      /**
       * <code>string emotion = 2;</code>
       */
      public java.lang.String getEmotion() {
        java.lang.Object ref = emotion_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          emotion_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string emotion = 2;</code>
       */
      public com.google.protobuf.ByteString
          getEmotionBytes() {
        java.lang.Object ref = emotion_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          emotion_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string emotion = 2;</code>
       */
      public Builder setEmotion(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        emotion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string emotion = 2;</code>
       */
      public Builder clearEmotion() {
        
        emotion_ = getDefaultInstance().getEmotion();
        onChanged();
        return this;
      }
      /**
       * <code>string emotion = 2;</code>
       */
      public Builder setEmotionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        emotion_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttEmotionDataItem)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttEmotionDataItem>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttEmotionDataItem>() {
      public CloudDriveMqttEmotionDataItem parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttEmotionDataItem(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttEmotionDataItem> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttEmotionDataItem> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttEmotionDataItem getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttLogDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttLogData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <code>string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>string msg = 2;</code>
     */
    java.lang.String getMsg();
    /**
     * <code>string msg = 2;</code>
     */
    com.google.protobuf.ByteString
        getMsgBytes();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttLogData}
   */
  public  static final class CloudDriveMqttLogData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttLogData)
      CloudDriveMqttLogDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttLogData.newBuilder() to construct.
    private CloudDriveMqttLogData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttLogData() {
      type_ = "";
      msg_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttLogData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              msg_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <code>string type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      }
    }
    /**
     * <code>string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MSG_FIELD_NUMBER = 2;
    private volatile java.lang.Object msg_;
    /**
     * <code>string msg = 2;</code>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        msg_ = s;
        return s;
      }
    }
    /**
     * <code>string msg = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (!getMsgBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, msg_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (!getMsgBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, msg_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData) obj;

      boolean result = true;
      result = result && getType()
          .equals(other.getType());
      result = result && getMsg()
          .equals(other.getMsg());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType().hashCode();
      hash = (37 * hash) + MSG_FIELD_NUMBER;
      hash = (53 * hash) + getMsg().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttLogData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttLogData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = "";

        msg_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData(this);
        result.type_ = type_;
        result.msg_ = msg_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData.getDefaultInstance()) return this;
        if (!other.getType().isEmpty()) {
          type_ = other.type_;
          onChanged();
        }
        if (!other.getMsg().isEmpty()) {
          msg_ = other.msg_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <code>string type = 1;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          type_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object msg_ = "";
      /**
       * <code>string msg = 2;</code>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string msg = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string msg = 2;</code>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string msg = 2;</code>
       */
      public Builder clearMsg() {
        
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>string msg = 2;</code>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        msg_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttLogData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttLogData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttLogData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttLogData>() {
      public CloudDriveMqttLogData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttLogData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttLogData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttLogData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttLogData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveMqttReportStatusDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 type = 1;</code>
     */
    int getType();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData}
   */
  public  static final class CloudDriveMqttReportStatusData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData)
      CloudDriveMqttReportStatusDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveMqttReportStatusData.newBuilder() to construct.
    private CloudDriveMqttReportStatusData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveMqttReportStatusData() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveMqttReportStatusData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              type_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <code>int32 type = 1;</code>
     */
    public int getType() {
      return type_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeInt32(1, type_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData) obj;

      boolean result = true;
      result = result && (getType()
          == other.getType());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData(this);
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int type_ ;
      /**
       * <code>int32 type = 1;</code>
       */
      public int getType() {
        return type_;
      }
      /**
       * <code>int32 type = 1;</code>
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 type = 1;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveMqttReportStatusData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveMqttReportStatusData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveMqttReportStatusData>() {
      public CloudDriveMqttReportStatusData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveMqttReportStatusData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveMqttReportStatusData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveMqttReportStatusData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveMqttReportStatusData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CloudDriveConfigChangeDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.nonda.onedata.proto.contract.CloudDriveConfigChangeData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string content = 1;</code>
     */
    java.lang.String getContent();
    /**
     * <code>string content = 1;</code>
     */
    com.google.protobuf.ByteString
        getContentBytes();
  }
  /**
   * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveConfigChangeData}
   */
  public  static final class CloudDriveConfigChangeData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.nonda.onedata.proto.contract.CloudDriveConfigChangeData)
      CloudDriveConfigChangeDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CloudDriveConfigChangeData.newBuilder() to construct.
    private CloudDriveConfigChangeData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CloudDriveConfigChangeData() {
      content_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CloudDriveConfigChangeData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              content_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.Builder.class);
    }

    public static final int CONTENT_FIELD_NUMBER = 1;
    private volatile java.lang.Object content_;
    /**
     * <code>string content = 1;</code>
     */
    public java.lang.String getContent() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        content_ = s;
        return s;
      }
    }
    /**
     * <code>string content = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContentBytes() {
      java.lang.Object ref = content_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        content_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getContentBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, content_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getContentBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, content_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData)) {
        return super.equals(obj);
      }
      io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData other = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData) obj;

      boolean result = true;
      result = result && getContent()
          .equals(other.getContent());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTENT_FIELD_NUMBER;
      hash = (53 * hash) + getContent().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.nonda.onedata.proto.contract.CloudDriveConfigChangeData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.nonda.onedata.proto.contract.CloudDriveConfigChangeData)
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.class, io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.Builder.class);
      }

      // Construct using io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        content_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_descriptor;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData getDefaultInstanceForType() {
        return io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.getDefaultInstance();
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData build() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData buildPartial() {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData result = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData(this);
        result.content_ = content_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData) {
          return mergeFrom((io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData other) {
        if (other == io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData.getDefaultInstance()) return this;
        if (!other.getContent().isEmpty()) {
          content_ = other.content_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object content_ = "";
      /**
       * <code>string content = 1;</code>
       */
      public java.lang.String getContent() {
        java.lang.Object ref = content_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          content_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string content = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContentBytes() {
        java.lang.Object ref = content_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          content_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string content = 1;</code>
       */
      public Builder setContent(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string content = 1;</code>
       */
      public Builder clearContent() {
        
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      /**
       * <code>string content = 1;</code>
       */
      public Builder setContentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        content_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.nonda.onedata.proto.contract.CloudDriveConfigChangeData)
    }

    // @@protoc_insertion_point(class_scope:io.nonda.onedata.proto.contract.CloudDriveConfigChangeData)
    private static final io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData();
    }

    public static io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CloudDriveConfigChangeData>
        PARSER = new com.google.protobuf.AbstractParser<CloudDriveConfigChangeData>() {
      public CloudDriveConfigChangeData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CloudDriveConfigChangeData(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CloudDriveConfigChangeData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CloudDriveConfigChangeData> getParserForType() {
      return PARSER;
    }

    public io.nonda.onedata.proto.contract.CloudDriveMqttMessageCreator.CloudDriveConfigChangeData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\033CloudDriveMqttMessage.proto\022\037io.nonda." +
      "onedata.proto.contract\032\031google/protobuf/" +
      "any.proto\"V\n\025CloudDriveMqttMessage\022\013\n\003cm" +
      "d\030\001 \001(\005\022\014\n\004time\030\002 \001(\003\022\"\n\004data\030\003 \001(\0132\024.go" +
      "ogle.protobuf.Any\"w\n\033CloudDriveMqttBoxSt" +
      "atusData\022\n\n\002fw\030\001 \001(\t\022\013\n\003app\030\002 \001(\t\022\013\n\003sim" +
      "\030\003 \001(\t\022\013\n\003lat\030\004 \001(\001\022\013\n\003lng\030\005 \001(\001\022\013\n\003acc\030" +
      "\006 \001(\002\022\013\n\003vol\030\007 \001(\002\"\222\001\n\027CloudDriveMqttEve" +
      "ntData\022\n\n\002fw\030\001 \001(\t\022\013\n\003app\030\002 \001(\t\022\013\n\003sim\030\003" +
      " \001(\t\022\013\n\003lat\030\004 \001(\001\022\013\n\003lng\030\005 \001(\001\022\013\n\003acc\030\006 ",
      "\001(\002\022\013\n\003vol\030\007 \001(\002\022\014\n\004type\030\010 \001(\005\022\017\n\007conten" +
      "t\030\t \001(\t\"b\n\025CloudDriveMqttGpsData\022I\n\005item" +
      "s\030\001 \003(\0132:.io.nonda.onedata.proto.contrac" +
      "t.CloudDriveMqttGpsDataItem\"j\n\031CloudDriv" +
      "eMqttGpsDataItem\022\014\n\004time\030\001 \001(\003\022\013\n\003lat\030\002 " +
      "\001(\001\022\013\n\003lng\030\003 \001(\001\022\013\n\003spd\030\004 \001(\002\022\013\n\003acc\030\005 \001" +
      "(\002\022\013\n\003brg\030\006 \001(\002\"j\n\031CloudDriveMqttGSensor" +
      "Data\022M\n\005items\030\001 \003(\0132>.io.nonda.onedata.p" +
      "roto.contract.CloudDriveMqttGSensorDataI" +
      "tem\"N\n\035CloudDriveMqttGSensorDataItem\022\014\n\004",
      "time\030\001 \001(\003\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 " +
      "\001(\002\"d\n\026CloudDriveMqttGyroData\022J\n\005items\030\001" +
      " \003(\0132;.io.nonda.onedata.proto.contract.C" +
      "loudDriveMqttGyroDataItem\"K\n\032CloudDriveM" +
      "qttGyroDataItem\022\014\n\004time\030\001 \001(\003\022\t\n\001x\030\002 \001(\002" +
      "\022\t\n\001y\030\003 \001(\002\022\t\n\001z\030\004 \001(\002\"A\n\026CloudDriveMqtt" +
      "FreqData\022\023\n\013collectFreq\030\001 \001(\005\022\022\n\nreportF" +
      "req\030\002 \001(\005\"d\n\026CloudDriveMqttFaceData\022J\n\005i" +
      "tems\030\001 \003(\0132;.io.nonda.onedata.proto.cont" +
      "ract.CloudDriveMqttFaceDataItem\"8\n\032Cloud",
      "DriveMqttFaceDataItem\022\014\n\004time\030\001 \001(\003\022\014\n\004f" +
      "ace\030\002 \001(\005\"j\n\031CloudDriveMqttEmotionData\022M" +
      "\n\005items\030\001 \003(\0132>.io.nonda.onedata.proto.c" +
      "ontract.CloudDriveMqttEmotionDataItem\">\n" +
      "\035CloudDriveMqttEmotionDataItem\022\014\n\004time\030\001" +
      " \001(\003\022\017\n\007emotion\030\002 \001(\t\"2\n\025CloudDriveMqttL" +
      "ogData\022\014\n\004type\030\001 \001(\t\022\013\n\003msg\030\002 \001(\t\".\n\036Clo" +
      "udDriveMqttReportStatusData\022\014\n\004type\030\001 \001(" +
      "\005\"-\n\032CloudDriveConfigChangeData\022\017\n\007conte" +
      "nt\030\001 \001(\tB\036B\034CloudDriveMqttMessageCreator",
      "b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttMessage_descriptor,
        new java.lang.String[] { "Cmd", "Time", "Data", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttBoxStatusData_descriptor,
        new java.lang.String[] { "Fw", "App", "Sim", "Lat", "Lng", "Acc", "Vol", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEventData_descriptor,
        new java.lang.String[] { "Fw", "App", "Sim", "Lat", "Lng", "Acc", "Vol", "Type", "Content", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsData_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGpsDataItem_descriptor,
        new java.lang.String[] { "Time", "Lat", "Lng", "Spd", "Acc", "Brg", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorData_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGSensorDataItem_descriptor,
        new java.lang.String[] { "Time", "X", "Y", "Z", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroData_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttGyroDataItem_descriptor,
        new java.lang.String[] { "Time", "X", "Y", "Z", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFreqData_descriptor,
        new java.lang.String[] { "CollectFreq", "ReportFreq", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceData_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttFaceDataItem_descriptor,
        new java.lang.String[] { "Time", "Face", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionData_descriptor,
        new java.lang.String[] { "Items", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttEmotionDataItem_descriptor,
        new java.lang.String[] { "Time", "Emotion", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttLogData_descriptor,
        new java.lang.String[] { "Type", "Msg", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveMqttReportStatusData_descriptor,
        new java.lang.String[] { "Type", });
    internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_nonda_onedata_proto_contract_CloudDriveConfigChangeData_descriptor,
        new java.lang.String[] { "Content", });
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
